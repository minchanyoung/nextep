@startuml NEXTEP_AI_Prediction_Sequence

title NEXTEP.AI 커리어 예측 플로우 - Sequence Diagram

actor "사용자" as User
participant "웹 브라우저" as Browser
participant "Flask App" as App
participant "Main Routes" as MainRoutes
participant "Services" as Services
participant "ML Routes" as MLRoutes
participant "XGBoost 모델" as MLModel
participant "Oracle DB" as Database
participant "Session" as Session

== 예측 페이지 접근 ==
User -> Browser: 예측 페이지 방문
Browser -> App: GET /predict
App -> MainRoutes: predict()
MainRoutes -> Database: get_current_user()

alt 회원인 경우
    Database --> MainRoutes: User 정보 반환
    MainRoutes -> Services: run_prediction(user_profile)
    Services -> MLRoutes: ML 예측 실행
    MLRoutes -> MLModel: 소득/만족도 예측
    MLModel --> MLRoutes: 예측 결과
    MLRoutes --> Services: 3가지 시나리오 결과
    Services --> MainRoutes: prediction_results
    MainRoutes -> Session: set_prediction_data()
    MainRoutes -> App: redirect to predict_result
    App -> Browser: 302 Redirect
    Browser --> User: 예측 결과 페이지로 이동
else 비회원인 경우
    Database --> MainRoutes: None
    MainRoutes -> App: render predict.html
    App -> Browser: 예측 입력 폼
    Browser --> User: 개인정보 입력 폼 표시
end

== 비회원 예측 실행 ==
User -> Browser: 폼 작성 및 제출
Browser -> App: POST /predict-result
App -> MainRoutes: predict_result()
MainRoutes -> Services: run_prediction(form_data)

Services -> MLRoutes: prepare_prediction_input()
MLRoutes -> MLRoutes: validate_input()
MLRoutes -> MLRoutes: feature_engineering()

Services -> MLRoutes: predict_income_change()
MLRoutes -> MLModel: XGBoost 소득 모델 실행
MLModel --> MLRoutes: 소득 변화율 예측

Services -> MLRoutes: predict_satisfaction_change() 
MLRoutes -> MLModel: XGBoost 만족도 모델 실행
MLModel --> MLRoutes: 만족도 변화 예측

MLRoutes -> MLRoutes: generate_distribution_data()
MLRoutes --> Services: 예측 결과 + 분포 데이터

Services --> MainRoutes: [현직유지, 직업A, 직업B] 결과

alt 비회원인 경우
    MainRoutes -> App: render predict_result.html
    App -> Browser: 예측 결과 페이지
else 회원인 경우  
    MainRoutes -> Session: set_prediction_data()
    MainRoutes -> App: render predict_result.html
    App -> Browser: 예측 결과 페이지 (세션 저장됨)
end

Browser --> User: 예측 결과 및 시각화 표시

== 동적 직업군 변경 ==
User -> Browser: 직업군 드롭다운 변경
Browser -> App: POST /predict-result (AJAX)
note right: X-Requested-With: XMLHttpRequest
App -> MainRoutes: predict_result() 
MainRoutes -> Services: run_prediction(updated_form_data)
Services -> MLRoutes: 새로운 예측 실행
MLRoutes -> MLModel: 변경된 시나리오 예측
MLModel --> MLRoutes: 새로운 예측 결과
MLRoutes --> Services: 업데이트된 결과
Services --> MainRoutes: prediction_results

MainRoutes -> App: JSON response
App -> Browser: {"prediction_results": [...]}
Browser -> Browser: updateResultCards()
Browser -> Browser: updateCharts()
Browser --> User: 실시간 결과 업데이트

note over User, MLModel: 예측은 KLIPS 데이터 기반 XGBoost 모델 사용\n현실적인 음수/양수 변화 모두 반영

@enduml