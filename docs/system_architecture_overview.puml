@startuml NEXTEP_AI_System_Architecture

title NEXTEP.AI 시스템 아키텍처 개요

!define FRONTEND_COLOR #E3F2FD
!define BACKEND_COLOR #F3E5F5  
!define AI_COLOR #E8F5E8
!define DATA_COLOR #FFF3E0
!define EXTERNAL_COLOR #FFEBEE

package "프론트엔드 레이어" <<Frontend>> FRONTEND_COLOR {
    [웹 브라우저] as Browser
    [JavaScript] as JS
    [HTML/CSS] as UI
    [Chart.js] as Charts
}

package "백엔드 애플리케이션 레이어" <<Backend>> BACKEND_COLOR {
    [Flask App] as Flask
    [Auth Routes] as AuthRoutes
    [Main Routes] as MainRoutes
    [ML Routes] as MLRoutes
    [Session Management] as Session
    [Error Handlers] as ErrorHandlers
}

package "비즈니스 로직 레이어" <<Business>> BACKEND_COLOR {
    [Services] as Services
    [Auth Utils] as AuthUtils
    [Validators] as Validators
    [Math Utils] as MathUtils
}

package "AI/ML 서비스 레이어" <<AI/ML>> AI_COLOR {
    [LLM Service] as LLMService
    [RAG Manager] as RAGManager
    [Prompt Templates] as PromptTemplates
    [Chat Session] as ChatSession
    [Document Processor] as DocProcessor
}

package "데이터 레이어" <<Data>> DATA_COLOR {
    [User Model] as UserModel
    [Oracle DB] as Database
    [ChromaDB] as VectorDB
    [Session Store] as SessionStore
    [Cache Manager] as Cache
}

package "외부 서비스" <<External>> EXTERNAL_COLOR {
    [Ollama LLM\nexaone3.5:7.8b] as OllamaLLM
    [XGBoost 모델\n소득 예측] as IncomeModel
    [XGBoost 모델\n만족도 예측] as SatisfactionModel
    [PDF 문서\n노동시장 데이터] as PDFDocs
}

' === 프론트엔드 관계 ===
Browser --> UI
UI --> JS
JS --> Charts

' === 프론트엔드-백엔드 통신 ===
Browser --> Flask : HTTP/AJAX
Flask --> Browser : JSON/HTML

' === 백엔드 내부 관계 ===
Flask --> AuthRoutes
Flask --> MainRoutes  
Flask --> MLRoutes
Flask --> Session
Flask --> ErrorHandlers

AuthRoutes --> AuthUtils
MainRoutes --> Services
MLRoutes --> Services

' === 비즈니스 로직 관계 ===
Services --> Validators
Services --> MathUtils
AuthUtils --> Validators

' === AI/ML 서비스 관계 ===
Services --> LLMService
Services --> RAGManager
Services --> ChatSession

LLMService --> PromptTemplates
RAGManager --> DocProcessor
RAGManager --> PromptTemplates

' === 데이터 레이어 관계 ===  
AuthUtils --> UserModel
Services --> UserModel
UserModel --> Database

Session --> SessionStore
RAGManager --> VectorDB
Services --> Cache

' === 외부 서비스 연동 ===
LLMService --> OllamaLLM : LangChain API
RAGManager --> OllamaLLM : 임베딩 & RAG
Services --> IncomeModel : 소득 예측
Services --> SatisfactionModel : 만족도 예측  
DocProcessor --> PDFDocs : 문서 처리

' === 특별한 관계들 ===
VectorDB ..> OllamaLLM : 임베딩 생성
RAGManager ..> PDFDocs : 문서 수집
ChatSession ..> SessionStore : 대화 저장

note top of Browser : 사용자 인터페이스\n- 예측 폼\n- 결과 시각화\n- AI 채팅
note right of Flask : Flask 애플리케이션\n- Blueprint 구조\n- RESTful API\n- 세션 관리
note bottom of Services : 핵심 비즈니스 로직\n- 예측 실행\n- AI 조언 생성\n- 데이터 처리
note left of RAGManager : RAG 시스템\n- 문서 검색\n- 컨텍스트 생성\n- 벡터 DB 관리
note bottom of Database : 데이터 저장소\n- 사용자 정보\n- 프로필 데이터\n- 세션 데이터

@enduml